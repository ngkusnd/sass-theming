@use 'sass:meta';
@use 'true' as *;
@use 'index' as * with (
  $_is-development: true,
  $themes: (
    "default": (
      "accent-primary": red,
      "font-family": ("Segoe UI", sans-serif),
      "padding": (10px 0)
    )
  )
);

@include describe('[function] get') {
  @include it('should warn if property does not exist in theme') {
    @include assert-equal(
      get('accent-tertiary'),
      "The 'accent-tertiary' property doesn't exist in the theme."
    );
  }

  @include it('should return property in css var() function') {
    @include assert-equal(get('accent-primary'), var(--accent-primary));
  }

  @include it('should return property in css var() function with fallback.') {
    @include assert-equal(
      get('accent-primary', (sans-serif, 'Segoe UI')),
      var(--accent-primary, sans-serif, 'Segoe UI')
    );
  }
}

@include describe('[mixin] get-all') {
  @include it('should warn if theme does not exist.') {
    @include assert {
      @include output {
        :root {
          @include get-all('dark');
        }
      }

      @include expect {
        :root {
          content: "The 'dark' theme is not found.";
        }
      }
    }
  }

  @include it('should outputs list of custom properties.') {
    @include assert {
      @include output {
        :root {
          @include get-all('default');
        }
      }

      @include expect {
        :root {
          --accent-primary: red;
          --font-family: 'Segoe UI', sans-serif;
          --padding: 10px 0;
        }
      }
    }
  }
}

@include describe('[mixin] set') {
  @include it('should warn if property does not exist.') {
    @include assert {
      @include output {
        button {
          @include set('accent-tertiary', black);
        }
      }

      @include expect {
        button {
          content: "The 'accent-tertiary' property doesn't exist in the theme.";
        }
      }
    }
  }

  @include it('should outputs custom property anotation.') {
    @include assert {
      @include output {
        .button {
          @include set('accent-primary', orange);
        }
      }

      @include expect {
        .button {
          --accent-primary: orange;
        }
      }
    }
  }
}
